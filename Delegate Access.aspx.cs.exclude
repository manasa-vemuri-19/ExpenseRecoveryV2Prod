using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;

public partial class Delegate_Accessaspx : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
       
        if (!IsPostBack)
        {
            lblMessage.Text = "**Please note that, all delegated accesses will be revoked at the end of the month**";
            DataTable dtData = (DataTable)Session["dtExpenseRecovery"];

            dtData.DefaultView.Sort = "CustomerCode";
            DataTable dtCustomerCode = dtData.DefaultView.ToTable(true, "CustomerCode");
            chkCustomerCodeList.DataSource = dtCustomerCode;
            chkCustomerCodeList.DataTextField = "CustomerCode";
            chkCustomerCodeList.DataBind();
            


            dtData.DefaultView.Sort = "MasterClientCode";
            DataTable dtMCC = dtData.DefaultView.ToTable(true, "MasterClientCode");
            chkMCCList.DataSource = dtMCC;
            chkMCCList.DataTextField = "MasterClientCode";
            chkMCCList.DataBind();
            


            dtData.DefaultView.Sort = "PracticeLine";
            DataTable dtPracticeLine = dtData.DefaultView.ToTable(true, "PracticeLine");
            chkPracticeLineList.DataSource = dtPracticeLine;
            chkPracticeLineList.DataTextField = "PracticeLine";
            chkPracticeLineList.DataBind();
            


            dtData.DefaultView.Sort = "Profit Center";
            DataTable dtProfitCentre = dtData.DefaultView.ToTable(true, "Profit Center");
            chkProfitCentreList.DataSource = dtProfitCentre;
            chkProfitCentreList.DataTextField = "Profit Center";
            chkProfitCentreList.DataBind();
           

            dtData.DefaultView.Sort = "PM";
            DataTable dtPM = dtData.DefaultView.ToTable(true, "PM");
            chkPMList.DataSource = dtPM;
            chkPMList.DataTextField = "PM";
            chkPMList.DataBind();
           


            dtData.DefaultView.Sort = "DM";
            DataTable dtDM = dtData.DefaultView.ToTable(true, "DM");
            chkDMList.DataSource = dtDM;
            chkDMList.DataTextField = "DM";
            chkDMList.DataBind();
          
            plCustomerCode.Visible = false;
            plMCC.Visible = false;
            plDM.Visible = false;
            plPM.Visible = false;
            plPracticeLine.Visible = false;
            plProfitCentre.Visible = false;
        }
    }
    protected void rdlSelection_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (rdlSelection.SelectedValue == "CC")
        {
            plCustomerCode.Visible = true;
            plMCC.Visible = false;
            plDM.Visible = false;
            plPM.Visible = false;
            plPracticeLine.Visible = false;
            plProfitCentre.Visible = false;

        }
        else if (rdlSelection.SelectedValue == "MCC")
        {
            plCustomerCode.Visible = false;
            plMCC.Visible = true;
            plDM.Visible = false;
            plPM.Visible = false;
            plPracticeLine.Visible = false;
            plProfitCentre.Visible = false;
        }

        else if (rdlSelection.SelectedValue == "PracticeLine")
        {
            plCustomerCode.Visible = false;
            plMCC.Visible = false;
            plDM.Visible = false;
            plPM.Visible = false;
            plPracticeLine.Visible = true;
            plProfitCentre.Visible = false;
        }
        else if (rdlSelection.SelectedValue == "ProfitCentre")
        {
            plCustomerCode.Visible = false;
            plMCC.Visible = false;
            plDM.Visible = false;
            plPM.Visible = false;
            plPracticeLine.Visible = false;
            plProfitCentre.Visible = true;
        }
        else if (rdlSelection.SelectedValue == "PM")
        {
            plCustomerCode.Visible = false;
            plMCC.Visible = false;
            plDM.Visible = false;
            plPM.Visible = true;
            plPracticeLine.Visible = false;
            plProfitCentre.Visible = false;
        }
        else if (rdlSelection.SelectedValue == "DM")
        {
            plCustomerCode.Visible = false;
            plMCC.Visible = false;
            plDM.Visible = true;
            plPM.Visible = false;
            plPracticeLine.Visible = false;
            plProfitCentre.Visible = false;
        }
    }
    protected void lbSelectAllCusCode_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkCustomerCodeList.Items.Count; i++)
        {
            chkCustomerCodeList.Items[i].Selected = true;
        }
    }
    protected void lbUnselectAllCusCode_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkCustomerCodeList.Items.Count; i++)
        {
            chkCustomerCodeList.Items[i].Selected = false;
        }
    }


    protected void lbSelectAllCustomerCode_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkCustomerCodeList.Items.Count; i++)
        {
            chkCustomerCodeList.Items[i].Selected = true;
        }
    }
    protected void lbUnselectAllCustomerCode_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkCustomerCodeList.Items.Count; i++)
        {
            chkCustomerCodeList.Items[i].Selected = false;
        }
    }


    protected void lbSelectAllMCC_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkMCCList.Items.Count; i++)
        {
            chkMCCList.Items[i].Selected = true;
        }
    }
    protected void lbUnselectAllMCC_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkMCCList.Items.Count; i++)
        {
            chkMCCList.Items[i].Selected = false;
        }
    }


    protected void lbSelectAllPracticeLine_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkPracticeLineList.Items.Count; i++)
        {
            chkPracticeLineList.Items[i].Selected = true;
        }
    }
    protected void lbUnselectAllPracticeLine_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkPracticeLineList.Items.Count; i++)
        {
            chkPracticeLineList.Items[i].Selected = false;
        }
    }


    protected void lbSelectAllProfitCentre_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkProfitCentreList.Items.Count; i++)
        {
            chkProfitCentreList.Items[i].Selected = true;
        }
    }
    protected void lbUnselectAllProfitCentre_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkProfitCentreList.Items.Count; i++)
        {
            chkProfitCentreList.Items[i].Selected = false;
        }
    }


    protected void lbSelectAllPM_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkPMList.Items.Count; i++)
        {
            chkPMList.Items[i].Selected = true;
        }
    }
    protected void lbUnselectAllPM_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkPMList.Items.Count; i++)
        {
            chkPMList.Items[i].Selected = false;
        }
    }


    protected void lbSelectAllDM_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkDMList.Items.Count; i++)
        {
            chkDMList.Items[i].Selected = true;
        }
    }
    protected void lbUnselectAllDM_Click(object sender, EventArgs e)
    {
        for (int i = 0; i < chkDMList.Items.Count; i++)
        {
            chkDMList.Items[i].Selected = false;
        }
    }

    protected void btnDelegate_Click(object sender, EventArgs e)
    {
        DAL daObj = new DAL();
        lblMessage.Visible = false;

        string UserName = System.IO.Path.GetFileName(User.Identity.Name);
        string EmpMailID = txtEmpmailID.Text.Trim();

        bool isCustomerCodeSelected = chkCustomerCodeList.SelectedIndex != -1;
        bool isMCCSelected = chkMCCList.SelectedIndex != -1;
        bool isPracticeSelected = chkPracticeLineList.SelectedIndex != -1;
        bool isPUSelected = chkProfitCentreList.SelectedIndex != -1;
        bool isPMSelected = chkPMList.SelectedIndex != -1;
        bool isDMSelected = chkDMList.SelectedIndex != -1;

        int result = 0;
        int DelegatedRecords = 0;

        if (EmpMailID == "")
        {
            Response.Write("<script>alert('Please enter a valid MailID')</script>");
            txtEmpmailID.Focus();
        }
        else if (rdlSelection.SelectedValue == "CC" && isCustomerCodeSelected == false)
        {
            Response.Write("<script>alert('Please select atleast one Customer code')</script>");
        }
        else if (rdlSelection.SelectedValue == "MCC" && isMCCSelected == false)
        {
            Response.Write("<script>alert('Please select atleast one MCC')</script>");
        }
        else if (rdlSelection.SelectedValue == "PracticeLine" && isPracticeSelected == false)
        {
            Response.Write("<script>alert('Please select atleast one Practice line')</script>");

        }
        else if (rdlSelection.SelectedValue == "ProfitCentre" && isPUSelected == false)
        {
            Response.Write("<script>alert('Please select atleast one profit centre')</script>");
        }
        else if (rdlSelection.SelectedValue == "PM" && isPMSelected == false)
        {
            Response.Write("<script>alert('Please select atleast one PM')</script>");
        }
        else if (rdlSelection.SelectedValue == "DM" && isDMSelected == false)
        {
            Response.Write("<script>alert('Please select atleast one DM')</script>");
        }
        else
        {
            DataTable dtCustomerCode = new DataTable();
            dtCustomerCode.Columns.Add("CustomerCode");
            DataTable dtMCC = new DataTable();
            dtMCC.Columns.Add("MCC");
            DataTable dtPM = new DataTable();
            dtPM.Columns.Add("PM");
            DataTable dtDM = new DataTable();
            dtDM.Columns.Add("DM");
            DataTable dtPracticeLine = new DataTable();
            dtPracticeLine.Columns.Add("PracticeLine");
            DataTable dtProfitCentre = new DataTable();
            dtProfitCentre.Columns.Add("ProfitCentre");

            if (rdlSelection.SelectedValue == "CustomerCode")
            {
                for (int i = 0; i < chkCustomerCodeList.Items.Count; i++)
                {
                    if (chkCustomerCodeList.Items[i].Selected == true)
                    {
                        DataRow dr = dtCustomerCode.NewRow();
                        dr["CustomerCode"] = chkCustomerCodeList.Items[i].Value;
                        dtCustomerCode.Rows.Add(dr);
                    }
                }
            }

            


            else if (rdlSelection.SelectedValue == "MCC")
            {
                for (int i = 0; i < chkMCCList.Items.Count; i++)
                {
                    if (chkMCCList.Items[i].Selected == true)
                    {
                        DataRow dr = dtMCC.NewRow();
                        dr["MCC"] = chkMCCList.Items[i].Value;
                        dtMCC.Rows.Add(dr);
                    }
                }
            }

        


            else if (rdlSelection.SelectedValue == "PM")
            {
                for (int i = 0; i < chkPMList.Items.Count; i++)
                {
                    if (chkPMList.Items[i].Selected == true)
                    {
                        DataRow dr = dtPM.NewRow();
                        dr["PM"] = chkPMList.Items[i].Value;
                        dtPM.Rows.Add(dr);
                    }
                }
            }

           


            else if (rdlSelection.SelectedValue == "DM")
            {
                for (int i = 0; i < chkDMList.Items.Count; i++)
                {
                    if (chkDMList.Items[i].Selected == true)
                    {
                        DataRow dr = dtDM.NewRow();
                        dr["DM"] = chkDMList.Items[i].Value;
                        dtDM.Rows.Add(dr);
                    }
                }
            }

            


            else if (rdlSelection.SelectedValue == "PracticeLine")
            {
                for (int i = 0; i < chkPracticeLineList.Items.Count; i++)
                {
                    if (chkPracticeLineList.Items[i].Selected == true)
                    {
                        DataRow dr = dtPracticeLine.NewRow();
                        dr["PracticeLine"] = chkPracticeLineList.Items[i].Value;
                        dtPracticeLine.Rows.Add(dr);
                    }
                }
            }

           


            else if (rdlSelection.SelectedValue == "ProfitCentre")
            {
                for (int i = 0; i < chkProfitCentreList.Items.Count; i++)
                {
                    if (chkProfitCentreList.Items[i].Selected == true)
                    {
                        DataRow dr = dtProfitCentre.NewRow();
                        dr["ProfitCentre"] = chkProfitCentreList.Items[i].Value;
                        dtProfitCentre.Rows.Add(dr);
                    }
                }
            }

            if (dtCustomerCode.Rows.Count != 0 || dtMCC.Rows.Count != 0 || dtPM.Rows.Count != 0 || dtDM.Rows.Count != 0 || dtPracticeLine.Rows.Count != 0 || dtProfitCentre.Rows.Count != 0)
            {
                string s = @EmpMailID;
                string[] values = s.Split(',');
                for (int i = 0; i < values.Length; i++)
                {
                    result = 0;
                    values[i] = values[i].Trim();

                    if (values[i] != UserName)
                    {
                        result = daObj.DelegateAccess(values[i], dtCustomerCode, dtMCC, dtPM, dtDM, dtPracticeLine, dtProfitCentre, UserName);

                        if (result == 1)
                        {
                            DelegatedRecords = DelegatedRecords + 1;
                        }
                    }
                }
            }
            if (DelegatedRecords > 0)
            {
                txtEmpmailID.Text = "";
                txtEmpmailID.Focus();

                for (int i = 0; i < chkCustomerCodeList.Items.Count; i++)
                {
                    chkCustomerCodeList.Items[i].Selected = false;
                }

                for (int i = 0; i < chkMCCList.Items.Count; i++)
                {
                    chkMCCList.Items[i].Selected = false;
                }

                for (int i = 0; i < chkPMList.Items.Count; i++)
                {
                    chkPMList.Items[i].Selected = false;
                }

                for (int i = 0; i < chkDMList.Items.Count; i++)
                {
                    chkDMList.Items[i].Selected = false;
                }
                for (int i = 0; i < chkProfitCentreList.Items.Count; i++)
                {
                    chkProfitCentreList.Items[i].Selected = false;
                }

                for (int i = 0; i < chkPracticeLineList.Items.Count; i++)
                {
                    chkPracticeLineList.Items[i].Selected = false;
                }
               
               
               
                lblMessage.Visible = true;
                lblMessage.Text = "Access has been delegated to " + DelegatedRecords + " member(s) successfully !!";
                lblMessage.ForeColor = System.Drawing.Color.Green;
            }
            else if(result==2)
            {
                Response.Write("<script>alert('Already Delegated by Someone else !!')</script>");
            }
            else if(result==0)
            {
                Response.Write("<script>alert('Some Error Occurred!!')</script>");
            }
        }
    }
}